<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmy.demo.mapper.ProductMapper">

	<select id="getProducts" resultType="com.lmy.demo.domain.Product">
		select a1.*,(select
		GROUP_CONCAT(a3.category) from product_categories a2,categories a3
		where a2.product_id=a1.id and a2.category_id=a3.id ) from product a1;
	</select>

	<!-- id:sql语句唯一标识 parameterType:指定传入参数类型 resultType:返回结果集类型 #{}:占位符：起到占位作用，如果传入的是基本类型（string,long,double,int,boolean,float等） 
		那么#{}中的变量名称可以随意写。 -->
	<select id="findUserById" parameterType="java.lang.Integer"
		resultType="com.lmy.pojo.User">
		select * from user where id=#{id}
	</select>
	<!-- 如果返回结果为集合,可以调用selectList方法，这个方法返回的结果是一个集合，所以映射文件中应该配置集合泛型的类型 ${}拼接符：字符串原样拼接，如果传入的参数是基本类型（string,long,double,int,boolean,float等），那么${}中的变量名称必须是value -->
	<select id="findUserByUsername" parameterType="java.lang.String"
		resultType="com.lmy.pojo.User">
		select * from user where username like #{username}
	</select>
	<!-- 如果返回结果为集合,可以调用selectList方法，这个方法返回的结果是一个集合，所以映射文件中应该配置集合泛型的类型 ${}拼接符：字符串原样拼接，如果传入的参数是基本类型（string,long,double,int,boolean,float等），那么${}中的变量名称必须是value -->
	<select id="findUserByUsername1" parameterType="java.lang.String"
		resultType="com.lmy.pojo.User">
		select * from user where username like '%${value}%'
	</select>
	<!-- #{}:如果传入的是pojo类型，那么#{}中的变量名称必须是pojo中对应的属性.属性.属性.... 如果要返回数据库自增主键：可以使用select 
		LAST_INSERT_ID() -->
	<insert id="inserUser" parameterType="com.lmy.pojo.User">
		<!-- 执行select LAST_INSERT_ID()数据库函数，返回自增的主键 keyProperty:将返回的主键放入传入参数的ID中保存。 
			order：当前函数相对于insert语句的执行顺序。在insert前执行是before，在insert后执行是after。 resultType：id的类型，也就是keyProperty中的属性类型 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select
			LAST_INSERT_ID()
		</selectKey>
		insert into user (username,birthday,sex,address)
		values(#{username},#{birthday},#{sex},#{address})
	</insert>

	<insert id="inserUser1" parameterType="com.lmy.pojo.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into user
		(username,birthday,sex,address)
		values(#{username},#{birthday},#{sex},#{address})
	</insert>

	<delete id="deleteUserById" parameterType="java.lang.Integer">
		delete from user where
		id=#{id}
	</delete>

	<update id="updateUserById" parameterType="com.lmy.pojo.User">
		update user set
		username=#{username} where id=#{id}
	</update>

	<select id="findUserByVo" parameterType="com.lmy.pojo.QueryVo"
		resultType="com.lmy.pojo.User">
		select * from user where username like '%${user.username}%' and
		sex=#{user.sex}
	</select>
</mapper>